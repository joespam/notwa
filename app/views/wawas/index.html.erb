<div id="gmap"></div>
<div class="container-fluid" id="main">
	<div class="row">
		<div class="col-xs-8" id="left">

			<div class="title_margin">
				<h1 class="big_header text_shad text_right">Hey, that used to be a Wawa!</h1>

				<% if !current_user %>
				  <p class="text_shad text_right">Did we miss one? Sign up and add it!</p>
				<% end %>
			</div>

			<% @wawas.each_with_index do |wawa, index| %>

				<div class="panel panel-default wawa_stucco">
					<div class="row">
						<div class="col-xs-4">
							<div class="panel-heading">
								<%  if wawa.prime_photo.exists? %>
									<%=  link_to "#{image_tag wawa.prime_photo.url(:medium)}".html_safe, wawa_path(wawa.id) %>
								<% else %>
									<%= link_to "Picture Unavailable - click here to see this NotWa's page", wawa_path(wawa.id), class: "btn btn-default" %>
								<% end %>
							</div>
						</div>
						<div class="col-xs-8">
					         <h2 class="blog-post-title text_shad crimson"><%= "#{wawa.city}, #{wawa.state} #{wawa.zip}" %></h2>
								<p class="blog-post-meta text_shad">
									<% if current_user && current_user == wawa.user || current_user && current_user.admin %>
										<span class="profilebox">
											<%= link_to "Edit wawa", edit_wawa_path(wawa.id), class: "btn btn-sm btn-danger" %>
										</span>
									<% end %>
									Submitted by <%= "#{wawa.user.username}"%>
									<%if wawa.user.profile %>
										<% if wawa.user.profile.avatar %>
											<%=  image_tag wawa.user.profile.avatar.url(:tiny) %>
										<% end %>
									<% end %>
									<br>
									<%="Last Updated on #{wawa.updated_at.strftime("%d/%m/%Y %H:%M")}"%>
								</p>
						</div>
					</div>
				</div> <!-- panel-default  -->

			<% end %> 	<!-- wawas.each -->
	   </div>	<!-- col-xs-8 -->
		<div class="col-xs-4">
			<!--map-canvas will be postioned here-->
		</div>

	</div><!-- /.row -->
</div><!-- /.container-fluid -->

<!--  -->
<script type="text/javascript">
	handler = Gmaps.build('Google');
	handler.buildMap({
	    provider: {
	      disableDefaultUI: false
	      // pass in other Google Maps API options here
	    },
	    internal: {
	      id: 'gmap'
	    }
	  },
	  function(){
			markers = handler.addMarkers(<%=raw @hash.to_json %>);
			handler.bounds.extendWith(markers);
			handler.fitMapToBounds();
		}
	);
	// allow map to responsively resize
	map = handler.getMap()
	google.maps.event.addDomListener(window, "resize", function() {
		 var center = map.getCenter();
		 google.maps.event.trigger(map, "resize");
		 map.setCenter(center); 
	});

	// connect the navbar search box to a google maps search box
	//
	var searchBox = new google.maps.places.SearchBox(document.getElementById('mapsearch'));
	// var searchBox = new google.maps.places.SearchBox($('#mapsearch'));

	// place change event on search box
	google.maps.event.addListener(searchBox, 'places_changed', function() {

		// console.log(searchBox.getPlaces());
		var places = searchBox.getPlaces();

		// bound
		var bounds = new google.maps.LatLngBounds();
		var i, place;

		for (i=0; place=places[i];i++){

			// console.log(place.geometry.location);

			bounds.extend(place.geometry.location);
			//marker.setPosition(place.geometry.location);
		};
		map.fitBounds(bounds); //fit to the bound
		map.setZoom(15); // set zoom
	});
</script>
